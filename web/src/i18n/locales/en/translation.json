{
  "app": {
    "title": "Kube-Tide",
    "description": "Kubernetes Management Platform"
  },
  "common": {
    "loading": "Loading...",
    "error": "Error",
    "success": "Success",
    "cancel": "Cancel",
    "save": "Save",
    "edit": "Edit",
    "delete": "Delete",
    "create": "Create",
    "update": "Update",
    "search": "Search",
    "filter": "Filter",
    "refresh": "Refresh",
    "back": "Back",
    "confirm": "Confirm",
    "apply": "Apply",
    "details": "Details",
    "noData": "No data available",
    "selectCluster": "Please select a cluster",
    "percentage": "Percentage",
    "operations": "Operations",
    "help": "Help",
    "yes": "Yes",
    "no": "No",
    "name": "Name",
    "namespace": "Namespace",
    "status": "Status",
    "labels": "Labels",
    "createTime": "Creation Time",
    "key": "Key",
    "value": "Value",
    "enabled": "Enabled",
    "disabled": "Disabled",
    "pleaseEnterKey": "Please enter key",
    "pleaseEnterValue": "Please enter value",
    "addLabel": "Add Label",
    "scale": "Scale",
    "restart": "Restart",
    "view": "View",
    "cluster": "Cluster:"
  },
  "navigation": {
    "dashboard": "Dashboard",
    "clusters": "Clusters",
    "nodes": "Nodes",
    "workloads": "Workloads",
    "pods": "Pods",
    "deployments": "Deployments",
    "statefulsets": "StatefulSets",
    "services": "Services",
    "settings": "Settings"
  },
  "dashboard": {
    "title": "Dashboard",
    "overview": "Overview",
    "clusterHealth": "Cluster Health",
    "resourceUtilization": "Resource Utilization",
    "cpuUsage": "CPU Usage",
    "memoryUsage": "Memory Usage",
    "storageUsage": "Storage Usage",
    "podCount": "Pod Count",
    "clusterMonitoring": "Cluster Monitoring Dashboard",
    "selectClusterPlaceholder": "Please select a cluster",
    "selectClusterView": "Please select a cluster to view monitoring data",
    "loadingData": "Loading data...",
    "resources": "Resource Allocation",
    "cpuResourceAllocation": "CPU Resource Allocation",
    "memoryResourceAllocation": "Memory Resource Allocation",
    "nodeStatusDistribution": "Node Status Distribution",
    "podCountHistory": "Pod Count History",
    "requested": "Requested",
    "limited": "Limited",
    "used": "Used",
    "deploymentAvailability": "Deployment Availability",
    "cpuUsageHistory": "CPU Usage History",
    "memoryUsageHistory": "Memory Usage History",
    "healthyNodes": "Healthy Nodes",
    "unhealthyNodes": "Unhealthy Nodes",
    "nodeCount": "Node Count"
  },
  "clusters": {
    "title": "Clusters",
    "management": "Cluster Management",
    "addCluster": "Add Cluster",
    "clusterName": "Cluster Name",
    "clusterStatus": "Status",
    "kubeVersion": "Kubernetes Version",
    "apiEndpoint": "API Endpoint",
    "createdAt": "Created At",
    "fetchFailed": "Failed to fetch clusters",
    "addSuccess": "Cluster added successfully",
    "addFailed": "Failed to add cluster",
    "pleaseInputName": "Please enter a cluster name",
    "clusterNamePlaceholder": "Please enter cluster name",
    "kubeconfigPath": "Kubeconfig Path",
    "pleaseInputKubeconfigPath": "Please enter kubeconfig file path",
    "kubeconfigPathPlaceholder": "Please enter the full path to the kubeconfig file",
    "kubeconfigContent": "Kubeconfig Content",
    "pleaseInputKubeconfigContent": "Please enter kubeconfig content",
    "kubeconfigContentPlaceholder": "Paste kubeconfig YAML content here",
    "addTypeFile": "Via File Path",
    "addTypeContent": "Via Content",
    "addTypeUnknown": "Unknown",
    "addType": "Add Cluster Type",
    "addTypeFileDescription": "kubeconfig file path",
    "addTypeContentDescription": "kubeconfig YAML content",
    "deleteConfirm": "Delete Cluster",
    "deleteConfirmMessage": "Are you sure you want to delete cluster {name}?",
    "deleteSuccess": "Cluster {name} has been deleted successfully",
    "deleteFailed": "Failed to delete cluster"
  },
  "nodes": {
    "title": "Nodes",
    "management": "Node Management",
    "addNode": "Add Node",
    "nodeName": "Node Name",
    "status": "Status",
    "role": "Role",
    "ipAddress": "IP Address",
    "osImage": "OS",
    "architecture": "Architecture",
    "capacity": "Capacity",
    "createdAt": "Created At",
    "selectCluster": "Select Cluster",
    "nodePoolManagement": "Node Pool Management",
    "fetchFailed": "Failed to fetch nodes",
    "metricsError": "Failed to fetch node metrics",
    "drain": "Drain",
    "draining": "Draining node...",
    "drainSuccess": "Node {nodeName} has been drained",
    "drainFailed": "Failed to drain node: {message}",
    "cordon": "Cordon",
    "cordonSuccess": "Node {nodeName} has been cordoned",
    "cordonFailed": "Failed to cordon node: {message}",
    "uncordon": "Uncordon",
    "uncordonSuccess": "Node {nodeName} has been uncordoned",
    "uncordonFailed": "Failed to uncordon node: {message}",
    "delete": "Delete Node",
    "deleteConfirm": "Confirm Delete Node",
    "deleteConfirmMessage": "Are you sure you want to delete node <strong>{nodeName}</strong>?",
    "deleteWarning": "This action will remove the node from the cluster. If there are still pods running on the node, you can force delete.",
    "deleteForceExplanation": "Force delete will:",
    "deleteForceCordon": "Mark the node as unschedulable",
    "deleteForceEvict": "Evict all pods from the node",
    "deleteForceRemove": "Remove the node from the cluster",
    "deleteForce": "Force Delete",
    "deleteSuccess": "Node {nodeName} deleted successfully",
    "deleteFailed": "Failed to delete node: {message}",
    "totalCount": "Total {total} nodes",
    "manageTaints": "Manage Taints",
    "manageLabels": "Manage Labels",
    "ready": "Ready",
    "notReady": "Not Ready",
    "conditions": {
      "title": "Node Conditions",
      "diskPressure": "Disk Pressure",
      "memoryPressure": "Memory Pressure",
      "pidPressure": "PID Pressure",
      "networkUnavailable": "Network Unavailable"
    },
    "metrics": {
      "cpuUsage": "CPU Usage",
      "memoryUsage": "Memory Usage",
      "podUsage": "Pod Usage",
      "diskUsage": "Disk Usage",
      "networkReceive": "Network Receive",
      "networkTransmit": "Network Transmit"
    },
    "roles": {
      "master": "Master",
      "worker": "Worker",
      "edge": "Edge"
    },
    "table": {
      "columns": {
        "status": "Status",
        "name": "Name",
        "roles": "Roles",
        "version": "Version",
        "internalIP": "Internal IP",
        "externalIP": "External IP",
        "pods": "Pods",
        "cpu": "CPU",
        "memory": "Memory",
        "age": "Age",
        "conditions": "Conditions"
      }
    },
    "filters": {
      "status": "Filter by status",
      "role": "Filter by role",
      "search": "Search nodes..."
    },
    "nodePool": {
      "title": "Node Pools",
      "unassigned": "Unassigned",
      "manage": "Manage Node Pools",
      "addPool": "Add Node Pool",
      "editPool": "Edit Node Pool",
      "deletePool": "Delete Node Pool",
      "poolName": "Node Pool Name",
      "nodeCount": "Node Count",
      "createPool": "Create Node Pool",
      "updatePool": "Update Node Pool",
      "createSuccess": "Node pool created successfully",
      "updateSuccess": "Node pool updated successfully",
      "deleteSuccess": "Node pool deleted successfully",
      "operationFailed": "Operation failed: {message}",
      "confirmDelete": "Are you sure you want to delete this node pool?",
      "labels": "Labels",
      "taints": "Taints",
      "addLabel": "Add Label",
      "addTaint": "Add Taint",
      "labelKey": "Label Key",
      "labelValue": "Label Value",
      "taintKey": "Taint Key",
      "taintValue": "Taint Value (optional)",
      "taintEffect": "Taint Effect",
      "pleaseEnterPoolName": "Please enter node pool name",
      "pleaseEnterLabelKey": "Please enter label key",
      "pleaseEnterLabelValue": "Please enter label value",
      "pleaseEnterTaintKey": "Please enter taint key",
      "pleaseSelectEffect": "Please select taint effect",
      "taintEffects": {
        "NoSchedule": "NoSchedule (prevents new pods from scheduling)",
        "PreferNoSchedule": "PreferNoSchedule (tries to avoid new pods scheduling)",
        "NoExecute": "NoExecute (prevents new pods and evicts existing pods)"
      },
      "autoScaling": "Auto Scaling",
      "minNodes": "Min Nodes",
      "maxNodes": "Max Nodes",
      "pleaseEnterMinNodes": "Please enter minimum nodes",
      "pleaseEnterMaxNodes": "Please enter maximum nodes",
      "advancedSettings": "Advanced Settings",
      "scaleDownDelay": "Scale Down Delay",
      "scaleDownUnneededTime": "Scale Down Unneeded Time",
      "scaleDownThreshold": "Scale Down Threshold",
      "scaleUpThreshold": "Scale Up Threshold",
      "scaleDownDelayAfterAdd": "Scale Down Delay After Add"
    },
    "addNodeModal": {
      "title": "Add Node",
      "nodeName": "Node Name",
      "nodeNamePlaceholder": "e.g. worker-1",
      "pleaseEnterNodeName": "Please enter node name",
      "nodeIP": "Node IP Address",
      "nodeIPPlaceholder": "e.g. 192.168.1.100",
      "pleaseEnterNodeIP": "Please enter node IP address",
      "nodePool": "Node Pool",
      "selectNodePool": "Select Node Pool (optional)",
      "sshPort": "SSH Port",
      "pleaseEnterSSHPort": "Please enter SSH port",
      "sshUser": "SSH Username",
      "pleaseEnterSSHUser": "Please enter SSH username",
      "authType": "Authentication Method",
      "pleaseEnterAuthType": "Please select authentication method",
      "sshKey": "SSH Key",
      "password": "Password",
      "sshKeyFile": "SSH Key File Path",
      "sshKeyFilePlaceholder": "e.g. /root/.ssh/id_rsa",
      "pleaseEnterSSHKeyFile": "Please enter SSH key file path",
      "sshPassword": "SSH Password",
      "pleaseEnterSSHPassword": "Please enter SSH password",
      "addNode": "Add Node",
      "addSuccess": "Node added successfully",
      "addFailed": "Failed to add node: {message}"
    }
  },
  "pods": {
    "title": "Pods",
    "management": "Pod Management",
    "name": "Pod Name",
    "status": "Status",
    "restarts": "Restarts",
    "age": "Age",
    "namespace": "Namespace",
    "node": "Node",
    "ip": "IP Address",
    "logs": "Logs",
    "terminal": "Terminal",
    "containers": "Containers",
    "fetchFailed": "Failed to fetch pods",
    "loading": "Loading...",
    "cluster": "Cluster:",
    "refresh": "Refresh",
    "delete": "Delete",
    "deleteConfirm": "Are you sure you want to delete this Pod?",
    "deleteSuccess": "Pod deleted successfully",
    "deleteFailed": "Failed to delete Pod",
    "viewDetails": "View Details",
    "viewLogs": "View Logs",
    "openTerminal": "Open Terminal",
    "noPodsFound": "No pods found in this namespace",
    "labels": "Labels",
    "annotations": "Annotations"
  },
  "podDetail": {
    "title": "Pod Details",
    "podNotFound": "Pod information not found",
    "backToPods": "Back to Pods List",
    "fetchFailed": "Failed to fetch pod details",
    "container": "Container",
    "tabs": {
      "info": "Basic Information",
      "monitoring": "Monitoring",
      "logs": "Logs",
      "terminal": "Terminal"
    },
    "basicInfo": {
      "title": "Basic Information",
      "name": "Name",
      "namespace": "Namespace",
      "status": "Status",
      "node": "Node",
      "ip": "Pod IP",
      "hostIP": "Host IP",
      "creationTime": "Creation Time",
      "qos": "QoS Class",
      "phase": "Phase"
    },
    "monitoring": {
      "cpuUsage": "CPU Usage",
      "memoryUsage": "Memory Usage",
      "diskUsage": "Disk Usage",
      "requests": "Requests",
      "limits": "Limits",
      "cpuHistory": "CPU Usage History",
      "memoryHistory": "Memory Usage History",
      "diskHistory": "Disk Usage History",
      "overview": "Overview",
      "containers": "Containers",
      "noContainerMetrics": "No container metrics available",
      "noMetricsData": "No monitoring data available"
    },
    "containers": {
      "title": "Containers",
      "name": "Name",
      "image": "Image",
      "ports": "Ports",
      "status": "Status",
      "ready": "Ready",
      "restarts": "Restarts",
      "resources": "Resources"
    },
    "volumeMounts": {
      "title": "Volume Mounts",
      "name": "Name",
      "mountPath": "Mount Path",
      "readOnly": "Read Only"
    },
    "volumes": {
      "title": "Volumes",
      "name": "Name",
      "type": "Type"
    },
    "logs": {
      "title": "Container Logs",
      "noData": "No log data available",
      "fetchFailed": "Failed to fetch logs",
      "fetchFailedRetry": "Failed to fetch logs, please try again",
      "connectingStream": "Connecting to real-time log stream, please wait...",
      "startStreamFailed": "Failed to start log stream",
      "startStreamFailedNetwork": "Failed to start log stream, please check network connection or refresh the page",
      "startStreamFailedDetail": "Failed to start log stream, please check network connection or refresh the page\nError details: {error}",
      "selectContainer": "Select Container",
      "lineCount": "Lines",
      "streamTooltip": "Real-time Logs",
      "streamEnabled": "Real-time",
      "streamDisabled": "Static",
      "autoScrollTooltip": "Auto Scroll",
      "scrollEnabled": "Scroll",
      "scrollDisabled": "No Scroll",
      "download": "Download",
      "scrollToBottom": "Scroll to Bottom"
    }
  },
  "deployments": {
    "title": "Deployments",
    "management": "Deployments Management",
    "name": "Deployment Name",
    "createDeployment": "Create Deployment",
    "editDeployment": "Edit Deployment",
    "replicas": "Replicas",
    "strategy": "Strategy",
    "image": "Image",
    "port": "Port",
    "environment": "Environment Variables",
    "labels": "Labels",
    "annotations": "Annotations",
    "fetchFailed": "Failed to fetch deployments",
    "fetchDetailFailed": "Failed to fetch deployment details",
    "createSuccess": "Deployment created successfully",
    "createFailed": "Failed to create deployment",
    "editSuccess": "Deployment updated successfully",
    "editFailed": "Failed to update deployment",
    "deleteSuccess": "Deployment deleted successfully",
    "deleteFailed": "Failed to delete deployment",
    "restartSuccess": "Successfully restarted {name}",
    "restartFailed": "Failed to restart",
    "restartConfirm": "Are you sure you want to restart this Deployment?",
    "scale": "Scale Replicas",
    "scaleTitle": "Scale Replicas: {name}",
    "currentReplicas": "Current Replicas",
    "readyReplicas": "Ready Replicas",
    "targetReplicas": "Enter Target Replicas",
    "scaleSuccess": "Successfully scaled {name} to {count} replicas",
    "scaleFailed": "Failed to scale replicas",
    "status": "Status",
    "createdAt": "Created At",
    "namespace": "Namespace",
    "details": "Details",
    "search": "Search Deployments",
    "loading": "Loading...",
    "noData": "No data available",
    "actions": "Actions",
    "viewDetails": "View Details",
    "scaleReplicas": "Scale Replicas",
    "restart": "Restart",
    "detail": {
      "extractingProbes": "Extracting probes from Pods, count: ",
      "processingPod": "Processing Pod: ",
      "foundContainer": "Found Deployment container: {name}",
      "foundProbe": "Container {container} has {type} probe",
      "processedContainers": "Processed container data: ",
      "basicInfo": {
        "title": "Basic Information",
        "replicas": "Replicas",
        "strategy": "Update Strategy"
      },
      "selector": "Selector",
      "containers": "Containers",
      "conditions": "Conditions",
      "pods": "Pod List",
      "containerColumns": {
        "name": "Name",
        "image": "Image",
        "ports": "Ports"
      },
      "conditionColumns": {
        "type": "Type",
        "status": "Status",
        "lastUpdateTime": "Last Update",
        "reason": "Reason",
        "message": "Message"
      }
    },
    "form": {
      "name": "Deployment Name",
      "pleaseEnterName": "Please enter deployment name",
      "namePattern": "Name must consist of lowercase letters, numbers, and hyphens, and cannot start or end with a hyphen",
      "replicas": "Replicas",
      "pleaseEnterReplicas": "Please enter number of replicas",
      "strategy": "Deployment Strategy",
      "pleaseSelectStrategy": "Please select deployment strategy",
      "strategies": {
        "rollingUpdate": "Rolling Update",
        "recreate": "Recreate"
      },
      "maxSurge": "Max Surge",
      "maxUnavailable": "Max Unavailable",
      "minReadySeconds": "Min Ready Seconds",
      "revisionHistoryLimit": "Revision History Limit",
      "pauseDeploy": "Pause Deployment",
      "tabs": {
        "basic": "Basic Info",
        "containers": "Containers",
        "volumes": "Volumes",
        "labelsAndAnnotations": "Labels & Annotations",
        "nodeAffinity": "Node Affinity",
        "advanced": "Advanced"
      },
      "container": {
        "name": "Container Name",
        "pleaseEnterName": "Please enter container name",
        "image": "Image",
        "pleaseEnterImage": "Please enter container image",
        "imagePlaceholder": "e.g. nginx:1.19",
        "resources": "Resource Limits",
        "cpuRequest": "CPU Request",
        "pleaseEnterCpuRequest": "Please enter CPU request",
        "cpuLimit": "CPU Limit",
        "pleaseEnterCpuLimit": "Please enter CPU limit",
        "enterValue": "Please enter a value",
        "cpuUnits": {
          "millicore": "Millicores (m)",
          "core": "Cores"
        },
        "memoryRequest": "Memory Request",
        "pleaseEnterMemoryRequest": "Please enter memory request",
        "memoryLimit": "Memory Limit",
        "pleaseEnterMemoryLimit": "Please enter memory limit",
        "ports": "Port Mappings",
        "portName": "Name",
        "containerPort": "Container Port",
        "pleaseEnterPort": "Please enter port number",
        "selectProtocol": "Select protocol",
        "protocol": "Protocol",
        "addPort": "Add Port",
        "environmentVariables": "Environment Variables",
        "pleaseEnterVarName": "Please enter variable name",
        "pleaseEnterVarValue": "Please enter variable value",
        "variableName": "Variable Name",
        "variableValue": "Variable Value",
        "addEnvVar": "Add Environment Variable",
        "healthChecks": "Health Checks",
        "add": "Add Container",
        "probes": {
          "liveness": "Liveness Probe",
          "readiness": "Readiness Probe",
          "startup": "Startup Probe",
          "type": "Check Type",
          "selectType": "Select check type",
          "command": "Command",
          "path": "Path",
          "pleaseEnterPath": "Please enter path",
          "port": "Port",
          "pleaseEnterPort": "Please enter port",
          "scheme": "Scheme",
          "pleaseEnterCommand": "Please enter check command",
          "commandPlaceholder": "Enter commands to execute, one per line",
          "initialDelay": "Initial Delay (seconds)",
          "period": "Period (seconds)",
          "timeout": "Timeout (seconds)",
          "successThreshold": "Success Threshold",
          "failureThreshold": "Failure Threshold"
        },
        "volumeMounts": "Volume Mounts",
        "volumeMount": {
          "name": "Volume Name",
          "pleaseSelectVolume": "Please select volume to mount",
          "selectVolume": "Select Volume",
          "mountPath": "Mount Path",
          "pleaseEnterMountPath": "Please enter mount path",
          "subPath": "Sub Path",
          "optional": "Optional",
          "readOnly": "Read Only",
          "add": "Add Volume Mount"
        }
      },
      "volume": {
        "name": "Volume Name",
        "pleaseEnterName": "Please enter volume name",
        "type": "Volume Type",
        "pleaseSelectType": "Please select volume type",
        "key": "Key",
        "pleaseEnterKey": "Please enter key",
        "path": "Path",
        "pleaseEnterPath": "Please enter path",
        "mode": "Mode",
        "add": "Add Volume",
        "configMap": {
          "name": "ConfigMap Name",
          "pleaseEnterName": "Please enter ConfigMap name",
          "addMapping": "Add Key Mapping"
        },
        "secret": {
          "name": "Secret Name",
          "pleaseEnterName": "Please enter Secret name",
          "addMapping": "Add Key Mapping"
        },
        "pvc": {
          "name": "PVC Name",
          "pleaseEnterName": "Please enter PVC name",
          "readOnly": "Read Only"
        },
        "emptyDir": {
          "medium": "Medium",
          "default": "Default",
          "memory": "Memory",
          "sizeLimit": "Size Limit",
          "sizeLimitPlaceholder": "e.g. 1Gi"
        },
        "hostPath": {
          "path": "Host Path",
          "pleaseEnterPath": "Please enter host path",
          "type": "Type",
          "default": "Default",
          "directory": "Directory",
          "directoryOrCreate": "DirectoryOrCreate",
          "file": "File",
          "fileOrCreate": "FileOrCreate"
        }
      },
      "labels": {
        "keyPlaceholder": "Label Key",
        "valuePlaceholder": "Label Value",
        "pleaseEnterKey": "Please enter label key",
        "pleaseEnterValue": "Please enter label value",
        "add": "Add Label"
      },
      "nodeSelector": {
        "title": "Node Selector",
        "keyPlaceholder": "e.g. disk-type",
        "valuePlaceholder": "e.g. ssd",
        "pleaseEnterKey": "Please enter selector key",
        "pleaseEnterValue": "Please enter selector value",
        "add": "Add Node Selector"
      },
      "annotations": {
        "keyPlaceholder": "Annotation Key",
        "valuePlaceholder": "Annotation Value",
        "pleaseEnterKey": "Please enter annotation key",
        "pleaseEnterValue": "Please enter annotation value",
        "add": "Add Annotation"
      },
      "advanced": {
        "serviceAccountName": "Service Account Name",
        "serviceAccountPlaceholder": "Leave empty to use the default service account",
        "hostNetwork": "Use Host Network",
        "dnsPolicy": "DNS Policy"
      },
      "nodeAffinity": {
        "title": "Node Affinity",
        "description": "Node affinity controls which nodes the Pod can be scheduled on",
        "requiredRulesTitle": "Required Rules",
        "requiredRulesDetail": "Pod can only be scheduled to nodes that satisfy at least one rule group",
        "preferredRulesTitle": "Preferred Rules",
        "preferredRulesDetail": "Scheduler will try to place Pod on nodes that satisfy these rules, but will still place it elsewhere if not possible",
        "requiredRules": "Required Node Affinity Rules",
        "preferredRules": "Preferred Node Affinity Rules",
        "requiredRulesDescription": "Pod must be scheduled to nodes that satisfy at least one rule group",
        "preferredRulesDescription": "Pod will preferentially be scheduled to nodes that satisfy these rules, with each rule having a weight value",
        "ruleGroup": "Rule Group",
        "preferredRule": "Preferred Rule",
        "deleteRuleGroup": "Delete Rule Group",
        "deleteRule": "Delete Rule",
        "matchLabels": "Match Labels",
        "matchFields": "Match Fields",
        "fieldMatchDescription": "Field matching is an advanced feature, typically used to match special node fields such as metadata.",
        "addLabelRule": "Add Label Match Rule",
        "addFieldRule": "Add Field Match Rule",
        "addRequiredRuleGroup": "Add Required Rule Group",
        "addPreferredRule": "Add Preferred Rule",
        "weight": "Weight",
        "pleaseEnterWeight": "Please enter weight value",
        "pleaseEnterKey": "Please enter key",
        "pleaseEnterValue": "Please enter value",
        "pleaseSelectOperator": "Please select operator",
        "keyPlaceholder": "e.g. kubernetes.io/hostname",
        "valuesPlaceholder": "Enter label values and press Enter, multiple values allowed",
        "keyExists": "Key Exists",
        "keyDoesNotExist": "Key Does Not Exist"
      }
    }
  },
  "services": {
    "title": "Services",
    "name": "Service Name",
    "createService": "Create Service",
    "editService": "Edit Service",
    "type": "Type",
    "clusterIp": "Cluster IP",
    "externalIp": "External IP",
    "ports": "Ports",
    "selectors": "Selectors",
    "management": "Services Management",
    "namespace": "Namespace:",
    "nodePort": "NodePort",
    "cluster": "Cluster:",
    "noSelectors": "No selectors",
    "deleteConfirm": "Are you sure you want to delete this service?",
    "createSuccess": "Service created successfully",
    "createFailed": "Failed to create service",
    "updateSuccess": "Service updated successfully",
    "updateFailed": "Failed to update service",
    "fetchFailed": "Failed to fetch services",
    "deleteSuccess": "Service deleted successfully",
    "deleteFailed": "Failed to delete service",
    "form": {
      "name": "Service Name",
      "pleaseEnterName": "Please enter service name",
      "namePattern": "Name must consist of lowercase letters, numbers, and hyphens, and cannot start or end with a hyphen",
      "type": "Service Type",
      "pleaseSelectType": "Please select service type",
      "portConfig": "Port Configuration",
      "atLeastOnePort": "At least one port must be configured",
      "portName": "Port Name",
      "selectProtocol": "Select protocol",
      "servicePort": "Service Port",
      "pleaseEnterServicePort": "Please enter service port",
      "targetPort": "Target Port",
      "pleaseEnterTargetPort": "Please enter target port",
      "protocol": "Protocol",
      "nodePort": "Node Port",
      "addPort": "Add Port",
      "labels": "Labels",
      "pleaseEnterLabelKey": "Please enter label key",
      "pleaseEnterLabelValue": "Please enter label value",
      "labelKeyPlaceholder": "Label key",
      "labelValuePlaceholder": "Label value",
      "addLabel": "Add Label",
      "selectors": "Selectors",
      "pleaseEnterSelectorKey": "Please enter selector key",
      "pleaseEnterSelectorValue": "Please enter selector value",
      "selectorKeyPlaceholder": "app",
      "selectorValuePlaceholder": "nginx",
      "addSelector": "Add Selector"
    }
  },
  "statefulsets": {
    "title": "StatefulSets",
    "management": "StatefulSets Management",
    "name": "StatefulSet Name",
    "createStatefulSet": "Create StatefulSet",
    "editStatefulSet": "Edit StatefulSet",
    "replicas": "Replicas",
    "serviceName": "Service Name",
    "podManagementPolicy": "Pod Management Policy",
    "updateStrategy": "Update Strategy",
    "fetchFailed": "Failed to fetch statefulsets",
    "fetchDetailsFailed": "Failed to fetch statefulset details",
    "createSuccess": "StatefulSet created successfully",
    "createFailed": "Failed to create statefulset",
    "editSuccess": "StatefulSet updated successfully",
    "editFailed": "Failed to update statefulset",
    "deleteSuccess": "StatefulSet deleted successfully",
    "deleteFailed": "Failed to delete statefulset",
    "restartSuccess": "Successfully restarted {name}",
    "restartFailed": "Failed to restart",
    "restartConfirm": "Are you sure you want to restart this StatefulSet?",
    "confirmDelete": "Are you sure you want to delete this StatefulSet?",
    "scale": "Scale Replicas",
    "scaleTitle": "Scale Replicas: {name}",
    "currentReplicas": "Current Replicas",
    "readyReplicas": "Ready Replicas",
    "targetReplicas": "Enter Target Replicas",
    "scaleSuccess": "Successfully scaled {name} to {count} replicas",
    "scaleFailed": "Failed to scale replicas",
    "status": "Status",
    "createdAt": "Created At",
    "namespace": "Namespace",
    "details": "Details",
    "search": "Search StatefulSets",
    "loading": "Loading...",
    "noData": "No data available",
    "actions": "Actions",
    "viewDetails": "View Details",
    "scaleReplicas": "Scale Replicas",
    "restart": "Restart",
    "detail": "StatefulSet Detail",
    "create": "Create StatefulSet",
    "confirmRestart": "Are you sure you want to restart this StatefulSet?",
    "update": "Update StatefulSet",
    "image": "Image",
    "volumeClaimTemplates": "Volume Claim Templates",
    "storageClassName": "Storage Class Name",
    "accessModes": "Access Modes",
    "storage": "Storage",
    "pods": "Pods",
    "containers": "Containers",
    "resources": "Resources",
    "requests": "Requests",
    "limits": "Limits",
    "requestsCpu": "CPU Request",
    "requestsMemory": "Memory Request",
    "limitsCpu": "CPU Limit",
    "limitsMemory": "Memory Limit",
    "environment": "Environment Variables",
    "ports": "Ports",
    "volumeClaimTemplate": "Volume Claim Template",
    "storageClassNamePlaceholder": "Leave empty to use default storage class",
    "pleaseSelectAccessMode": "Please select access mode",
    "pleaseEnterStorage": "Please enter storage size",
    "pleaseEnterName": "Please enter StatefulSet name",
    "pleaseEnterServiceName": "Please enter service name",
    "pleaseEnterReplicas": "Please enter number of replicas",
    "pleaseSelectPolicy": "Please select pod management policy",
    "pleaseSelectStrategy": "Please select update strategy",
    "pleaseEnterContainerName": "Please enter container name",
    "pleaseEnterImage": "Please enter container image",
    "pleaseSelectNamespace": "Please select namespace",
    "pleaseEnterPvcName": "Please enter PVC name",
    "namePlaceholder": "Please enter StatefulSet name",
    "serviceNamePlaceholder": "Please enter headless service name",
    "containerNamePlaceholder": "e.g. app",
    "imagePlaceholder": "e.g. nginx:1.19",
    "pvcNamePlaceholder": "e.g. data",
    "addContainer": "Add Container",
    "removeContainer": "Remove Container",
    "addPvc": "Add Volume Claim Template",
    "removePvc": "Remove Volume Claim Template",
    "replicasMustBePositive": "Replicas must be a non-negative number",
    "fetchPodsFailed": "Failed to fetch StatefulSet pods",
    "fetchEventsFailed": "Failed to fetch StatefulSet events",
    "manualInput": "Manual Input",
    "slider": "Slider"
  },
  "settings": {
    "title": "Settings",
    "language": "Language",
    "theme": "Theme",
    "lightTheme": "Light",
    "darkTheme": "Dark",
    "systemTheme": "System",
    "notifications": "Notifications",
    "profile": "Profile"
  },
  "errors": {
    "notFound": "Resource not found",
    "unauthorized": "Unauthorized access",
    "forbidden": "Access forbidden",
    "internalServer": "Internal server error",
    "badRequest": "Bad request",
    "connectionFailed": "Connection failed"
  },
  "nodeDetail": {
    "title": "Node Details",
    "backToList": "Back to Nodes List",
    "nodeNotFound": "Node information not found",
    "basicInfo": {
      "title": "Basic Information",
      "name": "Name",
      "ipAddress": "IP Address",
      "status": "Status",
      "os": "Operating System",
      "kernelVersion": "Kernel Version",
      "containerRuntime": "Container Runtime",
      "kubeletVersion": "Kubelet Version",
      "creationTime": "Creation Time",
      "unschedulable": "Unschedulable"
    },
    "resourceUsage": {
      "title": "Resource Usage",
      "totalCapacity": "Total Capacity",
      "used": "Used",
      "requested": "Requested",
      "limited": "Limited",
      "cpu": {
        "title": "CPU Usage",
        "totalCapacity": "Total Capacity",
        "usageRate": "Usage Rate",
        "used": "Used",
        "requested": "Requested",
        "limited": "Limited",
        "capacity": "Capacity",
        "usagePercent": "Usage Percentage",
        "requestPercent": "Request Percentage",
        "allocatable": "Allocatable",
        "format": "{value} cores"
      },
      "memory": {
        "title": "Memory Usage",
        "totalCapacity": "Total Capacity",
        "usageRate": "Usage Rate",
        "used": "Used",
        "requested": "Requested",
        "limited": "Limited",
        "capacity": "Capacity",
        "usagePercent": "Usage Percentage",
        "requestPercent": "Request Percentage",
        "allocatable": "Allocatable",
        "format": "{value} GB"
      },
      "disk": {
        "title": "Disk Usage",
        "totalCapacity": "Total Capacity",
        "used": "Used Space",
        "available": "Available Space",
        "usagePercent": "Usage Percentage"
      },
      "network": {
        "title": "Network Usage",
        "receive": "Inbound Traffic",
        "transmit": "Outbound Traffic",
        "format": "{value}/s"
      }
    },
    "taints": {
      "title": "Taints",
      "noTaints": "No taints"
    },
    "labels": {
      "title": "Labels",
      "noLabels": "No labels"
    },
    "pods": {
      "title": "Pod List",
      "columns": {
        "name": "Name",
        "namespace": "Namespace",
        "status": "Status",
        "podIP": "Pod IP",
        "creationTime": "Creation Time",
        "containers": "Containers"
      }
    },
    "operations": {
      "viewDetails": "View Details",
      "drain": "Drain Node",
      "drainConfirmTitle": "Confirm Drain Node",
      "drainConfirmMessage": "Are you sure you want to drain node {nodeName}?",
      "drainExplanation": "Draining the node will:",
      "drainSetUnschedulable": "Mark the node as unschedulable",
      "drainEvictPods": "Safely evict all pods from the node",
      "drainWaitMigration": "Wait for pods to migrate",
      "drainOptions": "The following options will be applied:",
      "drainOptionDaemonSet": "Ignore DaemonSet pods",
      "drainOptionLocalData": "Do not delete pods with local storage",
      "drainOptionGracePeriod": "Grace period: 300 seconds",
      "confirmDrain": "Confirm Drain",
      "cordon": "Cordon",
      "uncordon": "Uncordon",
      "manageTaints": "Manage Taints",
      "manageLabels": "Manage Labels",
      "delete": "Delete Node"
    },
    "nodePool": {
      "title": "Node Pool",
      "unassigned": "Unassigned"
    }
  },
  "clusterDetail": {
    "title": "Cluster Details",
    "backToList": "Back to Clusters List",
    "clusterName": "Cluster Name",
    "connectionStatus": {
      "connected": "Connected",
      "failed": "Connection Failed",
      "unknown": "Unknown"
    },
    "basicInfo": {
      "title": "Basic Information",
      "version": "Kubernetes Version",
      "platform": "Running Platform",
      "nodeCount": "Node Count",
      "namespaceCount": "Namespace Count",
      "totalCPU": "Total CPU Cores",
      "totalMemory": "Total Memory",
      "addType": "Add Type"
    },
    "monitoring": {
      "title": "Cluster Monitoring Dashboard",
      "overview": "Overview",
      "resources": "Resource Allocation",
      "cpuUsage": "Cluster CPU Usage",
      "memoryUsage": "Cluster Memory Usage",
      "metrics": {
        "podCount": "Total Pods",
        "deploymentAvailability": "Deployment Availability",
        "cpuTrend": "CPU Usage History",
        "memoryTrend": "Memory Usage History",
        "nodeStatus": "Node Status Distribution",
        "podCountTrend": "Pod Count History",
        "healthyNodes": "Healthy Nodes",
        "unhealthyNodes": "Unhealthy Nodes",
        "cpuAllocation": "CPU Resource Allocation",
        "memoryAllocation": "Memory Resource Allocation",
        "requested": "Requested",
        "limited": "Limited",
        "used": "Used"
      }
    },
    "namespaces": {
      "title": "Namespaces",
      "columns": {
        "name": "Name",
        "status": "Status",
        "creationTime": "Creation Time"
      }
    },
    "events": {
      "title": "Cluster Events"
    },
    "actions": {
      "test": "Test Connection",
      "testSuccess": "Cluster connection test successful",
      "testFailed": "Cluster connection test failed",
      "refresh": "Refresh"
    },
    "fetchMetricsFailed": "Failed to fetch cluster metrics"
  },
  "nodepool": {
    "notFound": "Node pool not found",
    "nodepoolNameEmpty": "Node pool name cannot be empty",
    "clusterNameEmpty": "Cluster name cannot be empty",
    "fetchFailed": "Failed to fetch node pool information",
    "createSuccess": "Node pool created successfully",
    "createFailed": "Failed to create node pool",
    "updateSuccess": "Node pool updated successfully",
    "updateFailed": "Failed to update node pool",
    "deleteSuccess": "Node pool deleted successfully",
    "deleteFailed": "Failed to delete node pool",
    "list": {
      "operation": "List node pools",
      "success": "Successfully retrieved node pool list",
      "failed": "Failed to retrieve node pool list"
    }
  },
  "namespaceSelector": {
    "fetchFailed": "Failed to fetch namespace list",
    "fetchError": "Error fetching namespaces, using defaults"
  },
  "labelsManage": {
    "title": "Manage Labels and Selectors",
    "labels": "Labels",
    "selector": "Selectors",
    "pleaseEnterKey": "Please enter key",
    "pleaseEnterValue": "Please enter value",
    "keyPlaceholder": "Key",
    "valuePlaceholder": "Value",
    "addLabel": "Add Label",
    "addSelector": "Add Selector",
    "validationFailed": "Validation failed"
  },
  "taintsManage": {
    "title": "Manage Taints - {nodeName}",
    "currentTaints": "Current Taints",
    "noTaints": "No taints",
    "addTaint": "Add Taint",
    "keyLabel": "Key",
    "valueLabel": "Value (optional)",
    "effectLabel": "Effect",
    "pleaseEnterKey": "Please enter taint key",
    "keyPlaceholder": "e.g. node-role.kubernetes.io/master",
    "valuePlaceholder": "Optional, e.g. true",
    "pleaseSelectEffect": "Please select taint effect",
    "clickToRemove": "Click to remove this taint",
    "addButton": "Add Taint",
    "fetchFailed": "Failed to fetch taints",
    "addSuccess": "Taint added successfully",
    "addFailed": "Failed to add taint",
    "deleteSuccess": "Taint removed successfully",
    "deleteFailed": "Failed to remove taint",
    "effects": {
      "noSchedule": "NoSchedule (prevents new pods from scheduling)",
      "preferNoSchedule": "PreferNoSchedule (tries to avoid scheduling new pods)",
      "noExecute": "NoExecute (prevents new pods and evicts existing ones)"
    }
  },
  "podTerminal": {
    "title": "Terminal:{podName}{containerName}",
    "titleNoInfo": "Terminal",
    "titleWithPod": "Terminal: {podName}",
    "titleWithContainer": "Terminal: {containerName}",
    "connectedStatus": " (Connected)",
    "connected": "Connected",
    "connecting": "Connecting...",
    "checking": "Checking Pod Status...",
    "error": "Connection Error",
    "disconnected": "Disconnected",
    "containerList": "Container List",
    "debug": "Debug Info",
    "reconnect": "Reconnect",
    "exitFullscreen": "Exit Fullscreen",
    "fullscreen": "Fullscreen",
    "connectingToContainer": "Connecting to container...",
    "connectionDetails": "Connecting to {cluster} / {namespace} / {pod} / {container}",
    "connectionSuccess": "Connection established successfully",
    "connectionClosed": "Connection closed",
    "connectionError": "Connection error",
    "possibleReasons": "Possible reasons: container is not ready or pod is not running",
    "checkPodError": "Error checking pod status: {error}",
    "connectionFailed": "Failed to connect to container",
    "containerNotReady": "Container '{container}' is not ready (phase: {phase})",
    "podNotExist": "Pod '{pod}' does not exist in namespace '{namespace}'",
    "checkPodFailed": "Failed to check pod status",
    "foundMatchingContainer": "Found matching container name",
    "usingMatchingContainer": "Using matching container '{found}' (requested: '{requested}')",
    "containerNotExist": "Specified container does not exist",
    "usingFirstContainer": "Using first container '{using}' (requested: '{requested}')",
    "noContainersInPod": "No containers available in pod",
    "connectionTimeoutError": "Connection timed out. The container might not be ready.",
    "connectionTimeout": "Connection timeout",
    "attachWebSocketError": "Error attaching WebSocket",
    "createWebSocketError": "Error creating WebSocket: {error}",
    "terminalInitError": "Terminal initialization error: {error}",
    "recheckingPodStatus": "Rechecking pod status...",
    "cluster": "Cluster",
    "namespace": "Namespace",
    "pod": "Pod",
    "container": "Container",
    "connectionStatus": "Connection Status",
    "availableContainers": "Available Containers",
    "containerListHint": "Available containers in this pod:",
    "current": "current",
    "noContainersFound": "No containers found in this pod",
    "checkingPodStatus": "Checking pod status...",
    "retry": "Retry",
    "checkContainersError": "Error checking containers: {error}"
  },
  "events": {
    "title": "{resourceKind} Events",
    "fetchFailed": "Failed to fetch {resourceKind} events",
    "fetchErrorLog": "Failed to fetch {resourceKind} events",
    "fetchErrorRetry": "Failed to fetch {resourceKind} events, please try again",
    "noEvents": "No events found for this {resourceKind}",
    "columns": {
      "type": "Type",
      "reason": "Reason",
      "message": "Message",
      "source": "Source",
      "firstTimestamp": "First Seen",
      "lastTimestamp": "Last Seen",
      "count": "Count"
    }
  },
  "timeRange": {
    "title": "Time Range",
    "1h": "1 Hour",
    "6h": "6 Hours",
    "24h": "24 Hours",
    "7d": "7 Days",
    "30d": "30 Days",
    "custom": "Custom",
    "selectDateRange": "Select Date Range",
    "from": "From",
    "to": "To",
    "apply": "Apply Range"
  }
}
